/**
  * check whether a string is the same backwards as forwards
  * NOTE: ignores punctuation characters.
  * input a string
  * returns boolean: true if input is a palindrome, false if it's not.
  */


function palindrome(str) {
  let testStr = str.toLowerCase(); // copy input to avoid mutation
  let noPunc = /[^a-z0-9]/ig; //regex for non-word characters like punctuation
  let badChars = noPunc.test(str); // test the input for characters to ignore. could also check the copy, <testStr>
  if (badChars){ // if there are bad characters, replace them with an empty string, effectively deleting them from the <testStr>
    testStr = testStr.replace(noPunc, "");
    console.log(testStr + " _punctuation removed");
  }

  let backwards = testStr.slice(); // copy <testStr> for comparison
  backwards = backwards.split("").reverse().join(""); // reverse the new copy
  if (backwards == testStr){ // if <backwards> is the same as <testStr>, the input is the same backwards as it is forwards, so it is a palindrome
    console.log("palindrome");
    return true;
  }else{
    console.log("NOT a palindrome");
    return false;
  }
}

palindrome("A man, a plan, a canal. Panama"); // test case
